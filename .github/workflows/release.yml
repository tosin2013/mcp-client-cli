name: Release mcp-testing-framework to PyPI

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'docs/**'
      - 'examples/**'
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies and run tests
        run: |
          uv venv --python ${{ matrix.python-version }}
          uv pip install -e ".[dev]"
          uv run pytest tests/ -v || echo "Tests not yet implemented"

  release:
    needs: test
    if: contains(github.event.head_commit.message, 'release') || github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write  # Required for creating GitHub releases

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install build dependencies
        run: |
          uv venv
          uv pip install build twine

      - name: Build package
        run: |
          uv run python -m build

      - name: Get version and package info
        id: get_info
        run: |
          uv pip install tomli
          echo "VERSION=$(uv run python -c 'import tomli; print(tomli.load(open("pyproject.toml", "rb"))["project"]["version"])')" >> $GITHUB_OUTPUT
          echo "PACKAGE_NAME=$(uv run python -c 'import tomli; print(tomli.load(open("pyproject.toml", "rb"))["project"]["name"])')" >> $GITHUB_OUTPUT

      - name: Verify package contents
        run: |
          echo "Package: ${{ steps.get_info.outputs.PACKAGE_NAME }}"
          echo "Version: ${{ steps.get_info.outputs.VERSION }}"
          ls -la dist/
          uv run twine check dist/*

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_info.outputs.VERSION }}
          name: mcp-testing-framework v${{ steps.get_info.outputs.VERSION }}
          body: |
            ## üéâ mcp-testing-framework v${{ steps.get_info.outputs.VERSION }}
            
            **Comprehensive testing framework for Model Context Protocol (MCP) servers**
            
            ### üöÄ Installation
            ```bash
            pip install mcp-testing-framework
            ```
            
            ### üîß Quick Start
            ```bash
            mcp-test --test-mcp-servers
            ```
            
            ### üì¶ Package Information
            - **Package**: ${{ steps.get_info.outputs.PACKAGE_NAME }}
            - **Version**: ${{ steps.get_info.outputs.VERSION }}
            - **Author**: Tosin Akinosho
            - **Python Support**: 3.9-3.12
            
            ### ü§ù Attribution
            Enhanced fork of the excellent [mcp-client-cli](https://github.com/original-author/mcp-client-cli) project.
            
            ---
            
            **Full Changelog**: https://github.com/tosinakinosho/mcp-testing-framework/compare/v${{ steps.get_info.outputs.VERSION }}...HEAD
          generate_release_notes: true
          files: |
            dist/* 