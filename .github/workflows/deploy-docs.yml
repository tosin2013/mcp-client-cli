name: Deploy Documentation to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "master"]
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-docs.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: ./docs

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        run: |
          cd docs
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/_site

  # Test job (runs in parallel with build)
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: ./docs

      - name: Test Jekyll build
        run: |
          cd docs
          bundle exec jekyll build
          
      - name: Validate site structure
        run: |
          cd docs
          # Check if key files exist
          test -f _site/index.html || (echo "‚ùå index.html not found" && exit 1)
          test -d _site/chapters || (echo "‚ùå chapters directory not found" && exit 1)
          
          # Count chapter files
          chapter_count=$(find _site/chapters -name "*.html" | wc -l)
          if [ $chapter_count -lt 12 ]; then
            echo "‚ùå Error: Expected 12 chapters, found $chapter_count"
            exit 1
          fi
          
          echo "‚úÖ Found $chapter_count chapter files"
          echo "‚úÖ Site validation passed"

      - name: Test internal links (optional)
        run: |
          cd docs
          # Install htmlproofer for link checking
          gem install html-proofer
          
          # Check internal links (ignore external links to avoid rate limiting)
          htmlproofer _site \
            --disable-external \
            --check-html \
            --check-img-http \
            --check-opengraph \
            --report-missing-names \
            --log-level :info \
            || echo "‚ö†Ô∏è Link checking completed with warnings"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Notification job (runs after deployment)
  notify:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "üéâ Documentation successfully deployed to https://tosin2013.github.io/mcp-client-cli"
          else
            echo "‚ùå Documentation deployment failed"
            exit 1
          fi 