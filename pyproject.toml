[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-testing-framework"
version = "1.0.0"
description = "Comprehensive testing framework for Model Context Protocol (MCP) servers - Enhanced fork of mcp-client-cli with advanced testing capabilities"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Tosin Akinosho", email = "tosin@decisioncrafters.com"}
]
maintainers = [
    {name = "Tosin Akinosho", email = "tosin@decisioncrafters.com"}
]
keywords = [
    "mcp", 
    "testing", 
    "model-context-protocol", 
    "server-testing", 
    "automation", 
    "ci-cd",
    "llm",
    "ai-testing",
    "integration-testing",
    "performance-testing"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
requires-python = ">=3.10"
dependencies = [
    "mcp>=1.0.0",
    "anthropic>=0.40.0",
    "openai>=1.54.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "aiohttp>=3.8.0",
    "asyncio-mqtt>=0.16.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "httpx>=0.24.0",
    "websockets>=11.0.0",
    "psutil>=5.9.0",
    "memory-profiler>=0.60.0",
    "py-spy>=0.3.14",
    "jsonschema>=4.17.0",
    "pyyaml>=6.0",
    "toml>=0.10.2",
    "jinja2>=3.1.0",
    "tabulate>=0.9.0",
    "colorama>=0.4.6",
    "tqdm>=4.64.0",
    "anyio>=3.6.0",
    "langchain-core>=0.1.0",
    "langchain>=0.1.0",
    "langgraph>=0.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0"
]
security = [
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "semgrep>=1.0.0"
]

[project.urls]
Homepage = "https://github.com/tosinakinosho/mcp-testing-framework"
Documentation = "https://mcp-testing-framework.readthedocs.io"
Repository = "https://github.com/tosinakinosho/mcp-testing-framework.git"
"Bug Tracker" = "https://github.com/tosinakinosho/mcp-testing-framework/issues"
Changelog = "https://github.com/tosinakinosho/mcp-testing-framework/blob/main/CHANGELOG.md"
"Original Project" = "https://github.com/original-author/mcp-client-cli"

[project.scripts]
mcp-test = "mcp_client_cli.cli:main"
mcp-testing = "mcp_client_cli.cli:main"
mcp-client = "mcp_client_cli.cli:main"
llm = "mcp_client_cli.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json", "*.toml"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_client_cli"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=mcp_client_cli",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
    "performance: marks tests as performance tests"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/mcp_client_cli"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
